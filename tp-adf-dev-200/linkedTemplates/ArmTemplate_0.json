{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tp-adf-dev-200"
		},
		"LS_HttpServer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.fuelwatch.wa.gov.au/fuelwatch/fuelWatchRSS"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://tp-ky-dev-200.vault.azure.net/"
		},
		"LS_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tpadlsdev200.dfs.core.windows.net/"
		},
		"LS_AzureSqlDatabase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SqlConnectionString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_HttpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_HttpServer_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fw_xml_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_HttpServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_HttpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "StorageAccountKey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_AzureSqlDatabase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dl_dest_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "feed.parquet",
						"folderPath": {
							"value": "@concat('datalakestore/Raw/FuelWatch/', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "tpdev"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "description",
						"type": "UTF8"
					},
					{
						"name": "brand",
						"type": "UTF8"
					},
					{
						"name": "date",
						"type": "INT96"
					},
					{
						"name": "price",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "trading-name",
						"type": "UTF8"
					},
					{
						"name": "location",
						"type": "UTF8"
					},
					{
						"name": "address",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "latitude",
						"type": "DOUBLE"
					},
					{
						"name": "longitude",
						"type": "DOUBLE"
					},
					{
						"name": "site-features",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dl_source_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "feed.parquet",
						"folderPath": {
							"value": "@concat('datalakestore/Raw/FuelWatch/', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": "tpdev"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_datamart')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "brand",
						"type": "nvarchar"
					},
					{
						"name": "date",
						"type": "date"
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "tradingname",
						"type": "nvarchar"
					},
					{
						"name": "location",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "phone",
						"type": "nvarchar"
					},
					{
						"name": "latitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "longitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "sitefeatures",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "tempstage",
					"table": "FuelPrices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_fuelwatch_datamart')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fuelWatch-to-parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['brand']"
										},
										"sink": {
											"name": "brand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['price']"
										},
										"sink": {
											"name": "price",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['trading-name']"
										},
										"sink": {
											"name": "trading-name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "location",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['phone']"
										},
										"sink": {
											"name": "phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['latitude']"
										},
										"sink": {
											"name": "latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['longitude']"
										},
										"sink": {
											"name": "longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['site-features']"
										},
										"sink": {
											"name": "site-features",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['rss']['channel']['item']"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fw_xml_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dl_source_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "parquet-SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "fuelWatch-to-parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [tempstage].[FuelPrices]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "trading-name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "tradingname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "site-features",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sitefeatures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_dl_dest_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_datamart",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STP-LoadBrand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "parquet-SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[STP_Dim_Brand]"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "STP-LoadSite",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STP-LoadBrand",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[STP_Dim_Site]"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "STP-SiteFeatures",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STP-LoadSite",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[STP_Dim_SiteFeatures]"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "STP-LoadFactPrices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "STP-SiteFeatures",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[STP_Fact_FactPrices]"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-10-29T09:37:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fw_xml_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_dl_source_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_dl_dest_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_datamart')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		}
	]
}